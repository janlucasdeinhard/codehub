setwd('TF_root/TF_files/30_R_PROJECTS/StocksModelling/')
library(tidyverse)
library(dplyr)
library(arules)
library(HMM)
library(recipes)
library(mlbench)
library(caret)
Y = read.csv('data/all_stocks.csv',header=TRUE)
Y$dm = rowMeans(Y[c('high','low')])
Y$diff = c(NaN,diff(Y$dm,lag = 1))
Y0 = filter(Y,Name=='AAPL')
disc <- discretize(Y0$diff,cuts=10,labels=seq(min(Y0$diff),max(Y0$diff),length.out=10),prefix=NULL)
Y0$binned = as.numeric(as.character(predict(disc,Y0$diff)))
Y0$states = as.numeric(predict(disc,Y0$diff))
setwd("~/TF_root/TF_files/30_R_PROJECTS/StocksModelling")
getwd()
library(tidyverse)
library(dplyr)
library(arules)
library(HMM)
library(recipes)
library(mlbench)
library(caret)
Y = read.csv('data/all_stocks.csv',header=TRUE)
Y$dm = rowMeans(Y[c('high','low')])
Y$diff = c(NaN,diff(Y$dm,lag = 1))
Y0 = filter(Y,Name=='AAPL')
disc <- discretize(Y0$diff,cuts=10,labels=seq(min(Y0$diff),max(Y0$diff),length.out=10),prefix=NULL)
Y0$binned = as.numeric(as.character(predict(disc,Y0$diff)))
Y0$states = as.numeric(predict(disc,Y0$diff))
plot(Y0$date,Y0$diff)
Y0$diff[:5]
Y0$diff[0:5]
plot(Y0$date[0:5],Y0$diff[0:5])
plot(Y0$date[0:5],Y0$diff[0:5],type='b')
plot(Y0$date[0:5],Y0$diff[0:5],type='n')
Y0$date[0:5]
Y0$date[0]
Y0$date
Y0$date[:,0:5]
typeof(Y0$date)
list(Y0$date)
list(Y0$date)[0:5]
Y0$date[c(1,1:5)]
Y0$date[c(1,1:5,1)]
Y0$date[c(1:5,1)]
Y0$date
levels(Y0$date)
Y0$date[c(1,1)]
Y0$date[c(1)]
Y0$date[c(1:5)]
plot(Y0$date[c(1:5)],Y0$diff[0:5],type='n')
plot(Y0$date[c(1:5)],Y0$diff[c(1:5)],type='n')
plot(Y0$date[c(1:5)],Y0$diff[c(1:5)])
typeof(Y0$diff)
as.list(levels(Y0$date))
as.list(levels(Y0$date))[1:5]
plot(as.list(levels(Y0$date))[1:5],as.list(Y0$diff)[1:5])
plot(c(1:5),Y0$diff[c(1:5)])
plot(c(1:5),Y0$diff[c(1:5)],'n')
plot(c(1:5),Y0$diff[c(1:5)],'l')
size(Y0$date)
shape(Y0$date)
dim(Y0$date)
dim(as.list(Y0$date))
as.list(levels(Y0$date))
dim(as.list(levels(Y0$date)))
levels(Y0$date)
dims(levels(Y0$date))
dim(levels(Y0$date))
nlevels(Y0$date)
Y0$N = c(1:nlevels(Y0$date))
plot(Y0$N,Y0$diff,'l')
library(tidyverse)
library(dplyr)
library(arules)
library(HMM)
library(recipes)
library(mlbench)
library(caret)
Y = read.csv('data/all_stocks.csv',header=TRUE)
Y$dm = rowMeans(Y[c('high','low')])
Y$diff = c(NaN,diff(Y$dm,lag = 1))
Y0 = filter(Y,Name=='AAPL')
Y0$N = c(1:nlevels(Y0$date))
disc <- discretize(Y0$diff,cuts=10,labels=seq(min(Y0$diff),max(Y0$diff),length.out=10),prefix=NULL)
Y0$binned = as.numeric(as.character(predict(disc,Y0$diff)))
Y0$states = as.numeric(predict(disc,Y0$diff))
plot(Y0$N,Y0$binned)
hist(Y0$binned)
plot(Y0$N,Y0$binned)
hist(Y0$states)
Y0$states
hmm = initHMM(States = c('VG','G','N','B','VB'), Symbols = c(1:10))
bw = baumWelch(hmm,Y0$states)
hmm = initHMM(States = c('VG','G','N','B','VB'), Symbols = c(1:10))
hmmparams = viterbiTraining(hmm,Y0$states)
matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
plot(Y0$N,Y0$binned)
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c('G','S','D','X'),Symbols=c('rs','r','n','d','ds'),transProbs=Thmm,emissionProbs=Ohmm)
Y0$diff
plot(Y0$N,Y0$diff)
0$N,Y0$diff,'l')
plot(Y0$N,Y0$diff,'l')
simHMM(hmm,10)
simHMM(hmm,10)
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c('G','S','D','X'),Symbols=c('rs','r','n','d','ds'),transProbs=Thmm,emissionProbs=Ohmm,startProbs=c(1,0,0,0))
simHMM(hmm,100)
hist(Y0$diff)
plot(Y0$N,Y0$diff,'l')
a = c(-2,-0.5,0.1,3)
a>-2
a[a>-2]
(a>-2)
(a>-2).INDEX()
(a>-2).index
(a>-2).index()
index((a>-2))
b = c('n','n','n','n','n')
b
b[a<=-2] = 'ds'
b[(a>-2)&(a<=-0.5)] = 'd'
b[(a>-0.5)&(a<=0.5)] = 'n'
b[(a>0.5)&(a<=2)] = 'r'
b[(a>2)] = 'rs'
b
rep('n',3)
dim(Y0$diff)
dim(list(Y0$diff))
dim(unlist(Y0$diff))
Y0$diff
Y0$diff[0]
typeof(Y0$diff)
unlist(Y0$diff)
dims(unlist(Y0$diff))
Y0$diff.nrow
dim(Y0$diff)
unlist(Y0$diff)
dim(unlist(Y0$diff))
dim(Y0)
dd = rep('n',dim(Y0))
dd = rep('n',dim(Y0)[1])
dd
d[Y0$diff<-2] = 'ds'
dd[Y0$diff<-2] = 'ds'
dd
Y0$diff<-2
Y0$diff[1]
Y0$diff[2]
Y0$diff[3]
Y0$diff[:]
Y0$diff[2:]
Y0$diff[c(2,)]
Y0$diff[c(2:100)]
Y$diff = c(NaN,diff(Y$dm,lag = 1))
Y0$diff[c(2:100)]
Y0$diff
Y$diff = c(NaN,diff(Y$dm,lag = 1))
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
disc <- discretize(Y0$diff,cuts=10,labels=seq(min(Y0$diff),max(Y0$diff),length.out=10),prefix=NULL)
Y0$binned = as.numeric(as.character(predict(disc,Y0$diff)))
Y0$states = as.numeric(predict(disc,Y0$diff))
plot(Y0$N,Y0$diff,'l')
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c('G','S','D','X'),Symbols=c('rs','r','n','d','ds'),transProbs=Thmm,emissionProbs=Ohmm,startProbs=c(1,0,0,0))
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y0$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
disc <- discretize(Y0$diff,cuts=10,labels=seq(min(Y0$diff),max(Y0$diff),length.out=10),prefix=NULL)
Y0$binned = as.numeric(as.character(predict(disc,Y0$diff)))
Y0$states = as.numeric(predict(disc,Y0$diff))
plot(Y0$N,Y0$diff,'l')
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c('G','S','D','X'),Symbols=c('rs','r','n','d','ds'),transProbs=Thmm,emissionProbs=Ohmm,startProbs=c(1,0,0,0))
Y0$diff
dim(Y0$diff)
dim(Y0$diff[1])
dim(Y0$diff[2])
dim(Y0$)
dim(Y0)
dim(Y0)[1]
c(1:dim(Y0)[1])
dd = rep('n',dim(Y0)[1])
dd
Y0$diff
Y0$diff<-2
Y0$diff
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y0$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
disc <- discretize(Y0$diff,cuts=10,labels=seq(min(Y0$diff),max(Y0$diff),length.out=10),prefix=NULL)
Y0$binned = as.numeric(as.character(predict(disc,Y0$diff)))
Y0$states = as.numeric(predict(disc,Y0$diff))
plot(Y0$N,Y0$diff,'l')
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c('G','S','D','X'),Symbols=c('rs','r','n','d','ds'),transProbs=Thmm,emissionProbs=Ohmm,startProbs=c(1,0,0,0))
Y0$diff
as.list(Y0$diff)
unlist(Y0$diff)
unlist(Y0$diff)[0]
unlist(Y0$diff)[1]
unlist(Y0$diff)[2]
unlist(Y0$diff)<-2
unlist(Y0$diff)< (-2)
dd[unlist(Y0$diff) < (-2)] = 'ds'
dd
dd[(unlist(Y0$diff) >= (-2)) & (unlist(Y0$diff) < (-0.5))] = 'ds'
dd
Y0$diff < (-2)
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y0$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
Y0$obs = rep('n',dim(Y0)[1])
Y0$obs[Y0$diff < (-2)] = 'ds'
Y0$obs[(Y0$diff >= (-2)) & (Y0$diff < (-0.5))] = 's'
Y0$obs[(Y0$diff > (0.5)) & (Y0$diff <= (2))] = 'r'
Y0$obs[Y0$diff > (2)] = 'rs'
Y0$obs
library(tidyverse)
library(dplyr)
library(arules)
library(HMM)
library(recipes)
library(mlbench)
library(caret)
Y = read.csv('data/all_stocks.csv',header=TRUE)
Y$dm = rowMeans(Y[c('high','low')])
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y0$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
Y0$obs = rep('n',dim(Y0)[1])
Y0$obs[Y0$diff < (-2)] = 'ds'
Y0$obs[(Y0$diff >= (-2)) & (Y0$diff < (-0.5))] = 's'
Y0$obs[(Y0$diff > (0.5)) & (Y0$diff <= (2))] = 'r'
Y0$obs[Y0$diff > (2)] = 'rs'
plot(Y0$N,Y0$diff,'l')
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c('G','S','D','X'),Symbols=c('rs','r','n','d','ds'),transProbs=Thmm,emissionProbs=Ohmm,startProbs=c(1,0,0,0))
baumWelch(hmm,observation=Y0$obs)
Y0$obs
Y0$obs[0]
Y0$obs[1]
Y0$obs[2]
baumWelch(hmm,Y0$obs)
hmm$emissionProbs
transpose(Thmm)
viterbi(hmm,Y0$obs)
viterbiTraining(hmm,Y0$obs)
Ohmm
Y0$obs
isnan(Y0$obs)
is.na(Y0$obs)
Y0$obs
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c("G","S","D","X"),Symbols=c("rs","r","n","d","ds"),transProbs=Thmm,emissionProbs=Ohmm)
simHMM(hmm)
simHMM(hmm,10)
viterbiTraining(hmm,Y0$obs)
Y0$obs[1]
Ohmm["G",Y0$obs[1]]
hmm$emissionProbs
hmm$emissionProbs["G"]
hmm$emissionProbs["G","rs"]
viterbiTraining(hmm,Y0$obs[4:10])
viterbiTraining(hmm,Y0$obs[4])
Y0$obs[4]
hmm$emissionProbs["G",Y0$obs[4]]
Y0$obs[4]
hmm$emissionProbs["G","s"]
hmm$emissionProbs
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y0$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
Y0$obs = rep('n',dim(Y0)[1])
Y0$obs[Y0$diff < (-2)] = 'ds'
Y0$obs[(Y0$diff >= (-2)) & (Y0$diff < (-0.5))] = 'd'
Y0$obs[(Y0$diff > (0.5)) & (Y0$diff <= (2))] = 'r'
Y0$obs[Y0$diff > (2)] = 'rs'
plot(Y0$N,Y0$diff,'l')
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c("G","S","D","X"),Symbols=c("rs","r","n","d","ds"),transProbs=Thmm,emissionProbs=Ohmm)
baumWelch(hmm,Y0$obs)
Y$dm = rowMeans(Y[c('high','low')])
Y0 = filter(Y,Name=='AAPL')
Y0$diff = c(NaN,diff(Y0$dm,lag = 1))
Y0$N = c(1:nlevels(Y0$date))
Y0$obs = rep('n',dim(Y0)[1])
Y0$obs[Y0$diff < (-2)] = 'ds'
Y0$obs[(Y0$diff >= (-2)) & (Y0$diff < (-0.5))] = 'd'
Y0$obs[(Y0$diff > (0.5)) & (Y0$diff <= (2))] = 'r'
Y0$obs[Y0$diff > (2)] = 'rs'
plot(Y0$N,Y0$diff,'l')
Thmm = matrix(c(0.4,0.5,0.1,0,0.2,0.6,0.2,0,0,0.1,0.6,0.3,0,0,0.1,0.9),nrow=4,ncol=4)
Ohmm = matrix(c(0.2,0.1,0.05,0.01,0.4,0.15,0.15,0.09,0.3,0.5,0.2,0.3,0.05,0.15,0.4,0.4,0.05,0.1,0.2,0.2),nrow=5,ncol=4)
hmm = initHMM(States=c("G","S","D","X"),Symbols=c("rs","r","n","d","ds"),transProbs=Thmm,emissionProbs=Ohmm)
bw_res = baumWelch(hmm,Y0$obs)
hmm$emissionProbs
bw_re  s
bw_res
bw_res$transProbs
bw_res$hmm
simHMM(bw_res$hmm,100)
simHMM(bw_res$hmm,100)
bf <- read.csv('..\\..\\..\\TF_data\\TESTS\\SHS_CSV\\export.csv',sep = '\t', nnrows = 100000)
bf <- read.csv('..\\..\\..\\TF_data\\TESTS\\SHS_CSV\\export.csv',sep = '\t', nrows = 100000)
print(unique(bf['ACC']))
bf[which(df$ACC == 'SU-1-1LC5AT'),]
bf[which(df['ACC'] == 'SU-1-1LC5AT'),]
bf[which(df['ACC'] == 'SU-1-1LC5AT'),]
typeof(bf)
typeof(data.frame(bf))
bf$ACC
bf[which(bf['ACC'] == 'SU-1-1LC5AT'),]
bf[which(bf['ACC'] == 'SU-1-1LC5AT'),4]
bf[which(bf['ACC'] == 'SU-1-1LC5AT'),4,6]
bf[which(bf['ACC'] == 'SU-1-1LC5AT'),]['Date','REV']
bf[which(bf['ACC'] == 'SU-1-1LC5AT'),]
df <- bf[which(bf['ACC'] == 'SU-1-1LC5AT'),]
df
df$(Date,REV)
df$[Date,REV]
df['Date']
df['Date','Rev']
df['Date','REV']
df <- bf[which(bf['ACC'] == 'SU-1-1LC5AT'),]
df
df %>% pull(Date)
pull(Date)
df.pull(Date)
select(1:3)
df %>% select('ACC')
df0 <- df %>% select('ACC')
df0 <- df %>% select('ACC')
df %>% select('ACC')
install.packages(dplyr)
install.packages("dplyr")
install.packages("magrittr")
df %>% select('ACC')
df
df["Date","REV"]
df["Date"]
df["REV"]
df[["Date","REV"]]
df[c("Date","REV")]
plot(df[c('Date','REV')])
plot(as.ts(df[c('Date','REV')]))
df$Date.min
(df$Date).min
min(df$Date)
df$Date
sort(df$Date)
sort(df$Date)[1]
sort(df$Date)[-1]
time.max <- time.sorted[length(time.sorted)]
time.sorted
time.sorted <- order(df$Date)
time.sorted
df$Date[time.sorted]
pwd
pwd()
ls()
ls
ls()
cd ..
